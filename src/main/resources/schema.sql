DROP TABLE IF EXISTS FILM CASCADE;

DROP TABLE IF EXISTS FILM_GENRE CASCADE;

DROP TABLE IF EXISTS FILM_LIKE CASCADE;

DROP TABLE IF EXISTS FRIENDSHIP CASCADE;

DROP TABLE IF EXISTS GENRE CASCADE;

DROP TABLE IF EXISTS RATING CASCADE;

DROP TABLE IF EXISTS USERS CASCADE;

DROP TABLE IF EXISTS REVIEW CASCADE;

DROP TABLE IF EXISTS REVIEW_LIKE CASCADE;

DROP TABLE IF EXISTS EVENTS CASCADE;

CREATE TABLE IF NOT EXISTS rating(
                                     rating_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
                                     name CHARACTER VARYING
);

CREATE TABLE IF NOT EXISTS film(
                                   film_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
                                   name CHARACTER VARYING NOT NULL,
                                   description CHARACTER VARYING,
                                   release_date DATE,
                                   duration INTEGER,
                                   rating_id INTEGER REFERENCES rating(rating_id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS genre(
                                    genre_id integer AUTO_INCREMENT NOT NULL PRIMARY KEY,
                                    name CHARACTER VARYING
);

CREATE TABLE IF NOT EXISTS film_genre(
                                         film_genre_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
                                         film_id INTEGER NOT NULL REFERENCES film(film_id) ON DELETE CASCADE,
    genre_id INTEGER NOT NULL REFERENCES genre(genre_id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS users (
                                     user_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
                                     email CHARACTER VARYING,
                                     login CHARACTER VARYING,
                                     name CHARACTER VARYING,
                                     birthday DATE
);

CREATE TABLE IF NOT EXISTS film_like(
                                        like_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
                                        film_id INTEGER NOT NULL REFERENCES film(film_id) ON DELETE CASCADE,
    user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS friendship(
                                         friendship_id INTEGER AUTO_INCREMENT NOT NULL PRIMARY KEY,
                                         user_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    friend_id INTEGER NOT NULL REFERENCES users(user_id) ON DELETE CASCADE,
    is_confirmed BOOLEAN
    );

CREATE TABLE IF NOT EXISTS REVIEW(
                                     review_id INTEGER AUTO_INCREMENT NOT NULL,
                                     content CHARACTER VARYING NOT NULL,
                                     is_positive BOOLEAN NOT NULL,
                                     user_id INTEGER NOT NULL,
                                     film_id INTEGER NOT NULL,
                                     useful INTEGER
);

CREATE TABLE IF NOT EXISTS review_like(
                                          review_id INTEGER NOT NULL,
                                          user_id INTEGER NOT NULL,
                                          is_like BOOLEAN
);

ALTER TABLE review_like
    ADD CONSTRAINT IF NOT EXISTS review_like_pkey PRIMARY KEY (review_id, user_id);

CREATE TABLE IF NOT EXISTS DIRECTORS
(
    DIRECTOR_ID BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME        VARCHAR(256) NOT NULL
    );

ALTER TABLE  public.REVIEW
    ADD CONSTRAINT IF NOT EXISTS review_pkey PRIMARY KEY (review_id);

ALTER TABLE public.REVIEW
    ADD CONSTRAINT IF NOT EXISTS fk1 FOREIGN KEY (film_id) REFERENCES public.film(film_id) ON DELETE CASCADE;

ALTER TABLE public.REVIEW
    ADD CONSTRAINT IF NOT EXISTS fk2 FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE;

ALTER TABLE public.review_like
    ADD CONSTRAINT IF NOT EXISTS fk3 FOREIGN KEY (review_id) REFERENCES public.review(review_id) ON DELETE CASCADE;

ALTER TABLE public.review_like
    ADD CONSTRAINT IF NOT EXISTS fk4 FOREIGN KEY (user_id) REFERENCES public.users(user_id) ON DELETE CASCADE;

CREATE TABLE IF NOT EXISTS DIRECTOR_FILMS
(
    DIRECTOR_ID BIGINT NOT NULL,
    FILM_ID     BIGINT NOT NULL,
    CONSTRAINT FK_DIRECTOR_FILMS1 FOREIGN KEY (DIRECTOR_ID) REFERENCES DIRECTORS (DIRECTOR_ID) ON DELETE CASCADE,
    CONSTRAINT FK_DIRECTOR_FILMS2 FOREIGN KEY (FILM_ID) REFERENCES FILM (FILM_ID) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS EVENTS
(
    ID         INTEGER auto_increment
    primary key,
    USER_ID    INTEGER,
    OPERATION  CHARACTER VARYING not null,
    EVENT_TYPE CHARACTER VARYING not null,
    TIMESTAMP  TIMESTAMP default LOCALTIMESTAMP,
    ENTITY_ID  INTEGER,
    constraint EVENTS_USERS_USER_ID_FK
    foreign key (USER_ID) references USERS ON DELETE CASCADE
    );

